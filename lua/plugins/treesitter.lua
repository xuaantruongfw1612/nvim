return {
	-- Plugin ch√≠nh: nvim-treesitter - h·ªó tr·ª£ highlight, indent, folding,... theo c·∫•u tr√∫c ng√¥n ng·ªØ
	"nvim-treesitter/nvim-treesitter",

	build = ":TSUpdate",

	config = function()
		local config = require("nvim-treesitter.configs")

		config.setup({
			auto_install = true,

			-- Ng√¥n ng·ªØ c·∫ßn parser
			ensure_installed = {
				"c",
				"lua",
				"vim",
				"python",
				"java",
				"javascript",
				"bash",
				"json",
				"html",
				"css",
				"markdown",
				"rust",
			},

			sync_install = false,

			-- Highlight theo c·∫•u tr√∫c ng√¥n ng·ªØ
			highlight = {
				enable = true,
				additional_vim_regex_highlighting = false,
			},

			-- T·ª± ƒë·ªông indent theo block
			indent = {
				enable = true,
			},

			-- B·∫≠t fold (m·∫∑c d√π fold th·ª±c t·∫ø s·∫Ω ƒë∆∞·ª£c ƒëi·ªÅu khi·ªÉn b·ªüi vim.opt)
			fold = {
				enable = true,
			},
		})

		-- ‚öôÔ∏è Thi·∫øt l·∫≠p folding v·ªõi treesitter
		vim.opt.foldmethod = "expr"
		vim.opt.foldexpr = "nvim_treesitter#foldexpr()"
		vim.opt.foldenable = true
		vim.opt.foldlevel = 99 -- M·ªü h·∫øt khi v√†o file

		-- üé® T√πy ch·ªânh highlight
		vim.api.nvim_set_hl(0, "@comment", { fg = "#808080" })           -- Comment x√°m
		vim.api.nvim_set_hl(0, "@variable", { fg = "#F5F5F5" })          -- Bi·∫øn th∆∞·ªùng
		vim.api.nvim_set_hl(0, "@variable.builtin", { fg = "#F5F5F5" })  -- Bi·∫øn c√≥ s·∫µn
		vim.api.nvim_set_hl(0, "@keyword", { fg = "#FFFFFF" })           -- T·ª´ kh√≥a (if, return,...)
	end,
}
