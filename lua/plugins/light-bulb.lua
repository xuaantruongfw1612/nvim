-- Khi b·∫°n ƒë·∫∑t con tr·ªè v√†o l·ªói / c·∫£nh b√°o,
-- VSCode th∆∞·ªùng c√≥ c√°i b√≥ng ƒë√®n üí° hi·ªán ra ‚Üí nh·∫•n v√†o ƒë·ªÉ quick fix / import, v.v.
-- Plugin n√†y m√¥ ph·ªèng y chang trong nvim

return {
	"kosayoda/nvim-lightbulb",
	config = function()
		-- T·∫Øt hi·ªÉn th·ªã t·ª± ƒë·ªông
		require("nvim-lightbulb").setup({
			autocmd = { enabled = true }, -- t·ª± ƒë·ªông b·∫≠t lightbulb khi c√≥ action code
		})

		-- Kh√¥i ph·ª•c tr·∫°ng th√°i t·ª´ vim.g n·∫øu c√≥
		local lightbulb_shown = vim.g.lightbulb_shown or false

		-- G√°n ph√≠m ƒë·ªÉ b·∫≠t/t·∫Øt lightbulb th·ªß c√¥ng
		vim.keymap.set("n", "<leader>lb", function()
			if lightbulb_shown then
				-- N·∫øu lightbulb ƒë√£ hi·ªÉn th·ªã, t·∫Øt n√≥
				require("nvim-lightbulb").update_lightbulb()
				vim.notify("ƒê√£ t·∫Øt lightbulb", vim.log.levels.INFO)
				lightbulb_shown = false
				vim.g.lightbulb_shown = false -- L∆∞u tr·∫°ng th√°i t·∫Øt v√†o vim.g
			else
				-- N·∫øu lightbulb ch∆∞a hi·ªÉn th·ªã, b·∫≠t n√≥
				require("nvim-lightbulb").update_lightbulb()
				vim.notify("ƒê√£ b·∫≠t lightbulb", vim.log.levels.INFO)
				lightbulb_shown = true
				vim.g.lightbulb_shown = true -- L∆∞u tr·∫°ng th√°i b·∫≠t v√†o vim.g
			end
		end, { desc = "B·∫≠t/T·∫Øt lightbulb" })
	end,
}
